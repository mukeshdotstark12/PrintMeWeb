
@model PrintForMe.Models.Account.RetrievePasswordViewModel
@using CMS.Helpers;

<div class="logon-panel-password-retrieval">
    <div class="heading-text pb-4">@ResHelper.GetString("PrintForMe.PasswordReset.Heading")</div>
    <div id="retrievePassword">
        @using (Html.BeginForm("RetrievePassword", "Account", FormMethod.Post))
        //@using (Ajax.BeginForm("RetrievePassword", new AjaxOptions { UpdateTargetId = "retrievePassword", InsertionMode = InsertionMode.ReplaceWith }))
        {
            @Html.AntiForgeryToken()
            <p>@ResHelper.GetString("PrintForMe.PasswordReset.Description")</p>
            <div class="form-horizontal" role="form">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="editing-form-label-cell">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="editing-form-value-cell">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group" style="color:red;">@ViewBag.Message</div>
                <input type="submit" value="@ResHelper.GetString("PrintForMe.Submit")" class="basic-button e-control e-btn e-lib e-primary wide-btn" />
            </div>
        }
        <script type="text/javascript">
            $.validator.unobtrusive.parse(document);
        </script>
    </div>
</div>

