@model PrintForMe.Models.WallPainting.AddWallPaintingProject
@using CMS.Helpers

@{
    ViewBag.Title = "EditWallPaintingProject";
    Layout = "";
}

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">

    <title>@ResHelper.GetString("PrintForMe.AddPhotos")</title>
    <link rel="stylesheet" href="~/Content/css/rating-style.css" />
    <link href="~/Content/css/css.css" rel="stylesheet">
    <link href="~/Content/css/styles.css" rel="stylesheet">
    <link href="~/Content/css/site.css" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <!--Syncfusion Essential JS 2 Styles -->
    <!-- Syncfusion Essential JS 2 Styles -->
    <link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/material.css" />


    <!-- Syncfusion Essential JS 2 Scripts -->
    <script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js"></script>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/jquery.slick/1.4.1/slick.css" />

    <link rel="stylesheet" href="~/Content/css/site.css">
</head>

<body cz-shortcut-listen="true">
    <div class="main-wrapper">
        @using (Html.BeginForm("AddWallPaintingProject", "WallPainting", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <header class="edit-photo-header">
                <div class="container">
                    <div class="editphoto-button-links">
                        @if (ViewBag.isEditProject)
                        {
                            <button type="submit" id="btnSaveToCart" name="addToCart" value="Add To Cart" class="editphoto-cart">@ResHelper.GetString("PrintForMe.EditProject")<img src="~/Content/images/save_icon.svg" alt="Save icon" /></button>
                        }
                        else
                        {
                            <button class="editphoto-cart" id="addToCart" name="addToCart" value="addToCart">@ResHelper.GetString("PrintForMe.AddToCart")<img src="~/Content/images/cart-icon.svg" alt="Cart icon" /></button>
                            <button type="submit" id="btnSave" class="editphoto-cart">@ResHelper.GetString("PrintForMe.SaveProject")<img src="~/Content/images/save_icon.svg" alt="Save icon" /></button>
                        }

                    </div>
                </div>
            </header>

            <div class="content-wrapper">
                <div class="edit-photos-wrapper">
                    <div class="container-fluid">
                        <div class="add-photo">
                            <img id="btnSelect" src="~/Content/Images/add-icon.svg" />
                        </div>

                        @Html.Hidden("AddWallPaintingProject.ProjectID", Model.ProjectID)
                        @Html.Hidden("AddWallPaintingProject.ServiceID", Model.ServiceID)
                        @Html.Hidden("AddWallPaintingProject.PaintingSize", Model.PaintingSize)
                        @Html.Hidden("AddWallPaintingProject.FrameColorID", Model.FrameColorID)
                        @Html.Hidden("AddWallPaintingProject.PaperMaterialID", Model.PaperMaterialID)
                        @Html.Hidden("AddWallPaintingProject.SKUID", Model.SKUID)
                        <div class="row" id="displayImages">

                            @for (var i = 0; i < Model.AddWallPaintingProjectDetails.Count; i++)
                            {
                                <!--edit-photo-item-->
                                <div class="edit-photo-col col-lg-3 col-md-4 col-12">
                                    <div class="edit-photo-item d-flex flex-column">
                                        <div class="edit-photo-item-top align-items-center justify-content-center d-flex">
                                            <div class="image">
                                                <img id="img_@i" name="file" type="file" src="@String.Format("data:image/png;base64,{0}", Model.AddWallPaintingProjectDetails[i].ImageToString)" />
                                                @Html.Hidden(string.Format("AddWallPaintingProject.AddWallPaintingProjectDetails[{0}].ImageUrl", i), Model.AddWallPaintingProjectDetails[i].ImageUrl)
                                                @Html.Hidden(string.Format("AddWallPaintingProject.AddWallPaintingProjectDetails[{0}].ItemID", i), Model.AddWallPaintingProjectDetails[i].ItemID)
                                            </div>
                                        </div>
                                        <div class="edit-photo-item-bottom mt-auto">
                                            @if (@Model.AddWallPaintingProjectDetails[i].IsLowResolution)
                                            {
                                                <div class="notes text-right d-flex align-items-center justify-content-end">The image resolution is low <img src="~/Content/Images/exclamation-icon.svg" /></div>
                                            }
                                            <div id="lblprice_@i" class="notes d-flex justify-content-center total-price" style="font-size: inherit;">Price:- SAR @Model.AddWallPaintingProjectDetails[i].Price</div>
                                            <div class="cart-remove-item-qty d-flex justify-content-between align-items-center">
                                                <div class="cart-remove-item  fa fa-trash-o" onclick="deletePhotos(@Model.AddWallPaintingProjectDetails[i].ItemID,@Model.SKUID,'@Model.AddWallPaintingProjectDetails[i].ImageUrl')">
                                                </div>
                                                <div class="input-group number-input cart-update-qty d-flex justify-content-between">
                                                    <div class="quantity buttons_added">
                                                        <input type="button" value="-" class="minus add-minus-btn ">
                                                        @Html.TextBox(string.Format("AddWallPaintingProject.AddWallPaintingProjectDetails[{0}].NoOfCopy", i), Model.AddWallPaintingProjectDetails[i].NoOfCopy, new { @class = "input-text qty text", @title = "Qty", @size = "4", @pattern = "", @inputmode = "", @type = "number", @step = "1", @min = "1", @max = "", onchange = "getPrice('" + i + "')" })
                                                        <input type="button" value="+" class="plus add-minus-btn ">
                                                    </div>
                                                </div>
                                            </div>
                                            @Html.DropDownList(string.Format("AddWallPaintingProject.AddWallPaintingProjectDetails[{0}].SizeID", i), new SelectList(Model.Size, "ItemID", "Code", Model.SizeID), new { @class = "js-variant-selector form-control", onchange = "getPrice('" + i + "')" })
                                        </div>
                                    </div>
                                </div>
                                <!--emd edit-photo-item-->
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

    <script>

         $("#btnSave").click(function (e) {
            if (@Model.AddWallPaintingProjectDetails.Count == 0) {
                e.preventDefault();
                alert("Select atleast one image");
                }

            if (@Model.AddWallPaintingProjectDetails.Where(x=>x.IsLowResolution).Count()> 0) {
                e.preventDefault();
                alert("@ResHelper.GetString("PrintForMe.LowResolutionMessage")");
            }
        });

        $("#addToCart").click(function (e) {
        if (@Model.AddWallPaintingProjectDetails.Count == 0) {
            e.preventDefault();
            alert("Select atleast one image");
            }
             if (@Model.AddWallPaintingProjectDetails.Where(x=>x.IsLowResolution).Count()> 0) {
                e.preventDefault();
                alert("@ResHelper.GetString("PrintForMe.LowResolutionMessage")");
            }
        });

        $("#btnSaveToCart").click(function (e) {
        if (@Model.AddWallPaintingProjectDetails.Count == 0) {
            e.preventDefault();
            alert("Select atleast one image");
            }
             if (@Model.AddWallPaintingProjectDetails.Where(x=>x.IsLowResolution).Count()> 0) {
                e.preventDefault();
                alert("@ResHelper.GetString("PrintForMe.LowResolutionMessage")");
            }
        });

    $("#btnSelect").click(function () {
        var inputPhotos = $('<input id="file" type="file" multiple accept="image/png, image/jpeg"/>');
        inputPhotos.change(function () {
            console.log("selected file:" + $(this).val());
            var files = inputPhotos.get(0).files;
            var fileData = new FormData();
            var projectId = $("#AddWallPaintingProject_ProjectID").val();
            var isOtherFiles = false;

            for (var i = 0; i < files.length; i++) {
                if (!files[i].name.match(/.(jpg|jpeg|png)$/i)) {
                    isOtherFiles = true;
                    alert('Select only image file');
                    break;
                }
            }

            if (!isOtherFiles) {
                for (var i = 0; i < files.length; i++) {
                    fileData.append("fileInput", files[i]);
                }
                fileData.append('id', projectId);

                $.ajax({
                    type: "POST",
                    url: "~/en-US/WallPainting/UploadFiles",
                    dataType: "json",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function (result, status, xhr) {
                        console.log(result, "files");
                        //FileDetails(result);
                        location.reload(true);
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr, status, error, "error");
                        location.reload(true);
                    }
                });
            }
        });
        inputPhotos.trigger('click');
    });

    function FileDetails(filePaths) {

        // VALIDATE OR CHECK IF ANY FILE IS SELECTED.
        if (filePaths.length > 0) {

            // RUN A LOOP TO CHECK EACH SELECTED FILE.
            for (var i = 0; i <= filePaths.length - 1; i++) {
                if (i == 0) {
                    document.getElementById('displayImages').innerHTML =
                        //document.getElementById('displayImages').innerHTML +
                        '<div class="edit-photo-col col-lg-3 col-md-4 col-12">' +
                        '<div class="edit-photo-item d-flex flex-column" > ' +
                        '<div class="edit-photo-item-top align-items-center justify-content-center d-flex">' +
                        '<div class="image">' +
                        '<img src="~/PrintForMe/TempProject/' + filePaths[i] + '" />' +
                        '</div>' +
                        '</div>' +
                        '</div >' +
                        '</div >';
                }
                else {
                    document.getElementById('displayImages').innerHTML =
                        document.getElementById('displayImages').innerHTML +
                        '<div class="edit-photo-col col-lg-3 col-md-4 col-12">' +
                        '<div class="edit-photo-item d-flex flex-column" > ' +
                        '<div class="edit-photo-item-top align-items-center justify-content-center d-flex">' +
                        '<div class="image">' +
                        '<img src="~/PrintForMe/TempProject/' + filePaths[i] + '" />' +
                        '</div>' +
                        '</div>' +
                        '</div >' +
                        '</div >';
                }
            }
        }
        else {
            alert('Please select a file.')
        }
    }


    function deletePhotos(itemId, SKUID,imageUrl) {
            //Deletes the record with ID sent below
            $.ajax({
                type: "POST",
                url: "~/en-US/WallPainting/DeletePhoto",
                data: JSON.stringify({ imageUrl: imageUrl, itemId: itemId, SKUID: SKUID }),
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    console.log(result, "this");
                    location.reload();
                },
                error: function (xhr, status, errorThrown) {
                    console.log(projectId, "this");
                    location.reload();
                }
            });
    }


    //***** For step up and down *****//
    function wcqib_refresh_quantity_increments() {
        jQuery("div.quantity:not(.buttons_added), td.quantity:not(.buttons_added)").each(function (a, b) {
            var c = jQuery(b);
            c.addClass("buttons_added"), c.children().first().before('<input type="button" value="-" class="minus" />'), c.children().last().after('<input type="button" value="+" class="plus" />')
        })
    }
    String.prototype.getDecimals || (String.prototype.getDecimals = function () {
        var a = this,
            b = ("" + a).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
        return b ? Math.max(0, (b[1] ? b[1].length : 0) - (b[2] ? +b[2] : 0)) : 0
    }), jQuery(document).ready(function () {
        wcqib_refresh_quantity_increments()
    }), jQuery(document).on("updated_wc_div", function () {
        wcqib_refresh_quantity_increments()
    }), jQuery(document).on("click", ".plus, .minus", function () {
        var a = jQuery(this).closest(".quantity").find(".qty"),
            b = parseFloat(a.val()),
            c = parseFloat(a.attr("max")),
            d = parseFloat(a.attr("min")),
            e = a.attr("step");
        b && "" !== b && "NaN" !== b || (b = 0), "" !== c && "NaN" !== c || (c = ""), "" !== d && "NaN" !== d || (d = 0), "any" !== e && "" !== e && void 0 !== e && "NaN" !== parseFloat(e) || (e = 1), jQuery(this).is(".plus") ? c && b >= c ? a.val(c) : a.val((b + parseFloat(e)).toFixed(e.getDecimals())) : d && b <= d ? a.val(d) : b > 0 && a.val((b - parseFloat(e)).toFixed(e.getDecimals())), a.trigger("change")
    });
    //***** For step up and down *****//


    function imgSize(id) {
        console.log(id, "id")
        var myImg = document.querySelector("#img_" + id);
        var realWidth = myImg.naturalWidth;
        var realHeight = myImg.naturalHeight;
        //alert("Original width=" + realWidth + ", " + "Original height=" + realHeight);
        return false;
        }

          function getPrice(id) {
            var sizeId = document.getElementById('AddWallPaintingProject_AddWallPaintingProjectDetails_' + id + '__SizeID').value;
            var qty = document.getElementById('AddWallPaintingProject_AddWallPaintingProjectDetails_' + id + '__NoOfCopy').value;
            console.log(qty, "id");
            //var txt = @Model.Size;
           // console.log(txt,"text");
                $.ajax({
                    type: "POST",
                    url: '~/ar-SA/WallPainting/GetPrice',
                    data: '{ "sizeId": "' + parseInt(sizeId) + '", "serviceId": "' +@Model.ServiceID+'","qty":"'+qty+'"}',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (result, status, xhr) {
                        //$('div.total-price').text('Price:- SAR ' + result);
                        document.getElementById("lblprice_" + id).innerHTML = 'Price:- SAR ' + result
                    },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                    }
            });
        }

    </script>

</body>


