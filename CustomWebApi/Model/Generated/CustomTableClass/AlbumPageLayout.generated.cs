//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.CustomTables.Types.Printforme;
using CMS.CustomTables;

[assembly: RegisterCustomTable(AlbumPageLayoutItem.CLASS_NAME, typeof(AlbumPageLayoutItem))]

namespace CMS.CustomTables.Types.Printforme
{
	/// <summary>
	/// Represents a content item of type AlbumPageLayoutItem.
	/// </summary>
	public partial class AlbumPageLayoutItem : CustomTableItem
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Printforme.AlbumPageLayout";


		/// <summary>
		/// The instance of the class that provides extended API for working with AlbumPageLayoutItem fields.
		/// </summary>
		private readonly AlbumPageLayoutItemFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// Horizontal Section Count.
		/// </summary>
		[DatabaseField]
		public int HorizontalSectionCount
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("HorizontalSectionCount"), 0);
			}
			set
			{
				SetValue("HorizontalSectionCount", value);
			}
		}


		/// <summary>
		/// Vetical Section Count.
		/// </summary>
		[DatabaseField]
		public int VeticalSectionCount
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("VeticalSectionCount"), 0);
			}
			set
			{
				SetValue("VeticalSectionCount", value);
			}
		}


		/// <summary>
		/// ColumnNumber.
		/// </summary>
		[DatabaseField]
		public int ColumnNumber
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ColumnNumber"), 0);
			}
			set
			{
				SetValue("ColumnNumber", value);
			}
		}


		/// <summary>
		/// PartitionType.
		/// </summary>
		[DatabaseField]
		public string PartitionType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PartitionType"), @"");
			}
			set
			{
				SetValue("PartitionType", value);
			}
		}


		/// <summary>
		/// DefaultLayout.
		/// </summary>
		[DatabaseField]
		public bool DefaultLayout
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("DefaultLayout"), false);
			}
			set
			{
				SetValue("DefaultLayout", value);
			}
		}


		/// <summary>
		/// PageLayoutCode.
		/// </summary>
		[DatabaseField]
		public string PageLayoutCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageLayoutCode"), @"");
			}
			set
			{
				SetValue("PageLayoutCode", value);
			}
		}


		/// <summary>
		/// PhotoCount.
		/// </summary>
		[DatabaseField]
		public int PhotoCount
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("PhotoCount"), 0);
			}
			set
			{
				SetValue("PhotoCount", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with AlbumPageLayoutItem fields.
		/// </summary>
		[RegisterProperty]
		public AlbumPageLayoutItemFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with AlbumPageLayoutItem fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class AlbumPageLayoutItemFields : AbstractHierarchicalObject<AlbumPageLayoutItemFields>
		{
			/// <summary>
			/// The content item of type AlbumPageLayoutItem that is a target of the extended API.
			/// </summary>
			private readonly AlbumPageLayoutItem mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="AlbumPageLayoutItemFields" /> class with the specified content item of type AlbumPageLayoutItem.
			/// </summary>
			/// <param name="instance">The content item of type AlbumPageLayoutItem that is a target of the extended API.</param>
			public AlbumPageLayoutItemFields(AlbumPageLayoutItem instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// Horizontal Section Count.
			/// </summary>
			public int HorizontalSectionCount
			{
				get
				{
					return mInstance.HorizontalSectionCount;
				}
				set
				{
					mInstance.HorizontalSectionCount = value;
				}
			}


			/// <summary>
			/// Vetical Section Count.
			/// </summary>
			public int VeticalSectionCount
			{
				get
				{
					return mInstance.VeticalSectionCount;
				}
				set
				{
					mInstance.VeticalSectionCount = value;
				}
			}


			/// <summary>
			/// ColumnNumber.
			/// </summary>
			public int ColumnNumber
			{
				get
				{
					return mInstance.ColumnNumber;
				}
				set
				{
					mInstance.ColumnNumber = value;
				}
			}


			/// <summary>
			/// PartitionType.
			/// </summary>
			public string PartitionType
			{
				get
				{
					return mInstance.PartitionType;
				}
				set
				{
					mInstance.PartitionType = value;
				}
			}


			/// <summary>
			/// DefaultLayout.
			/// </summary>
			public bool DefaultLayout
			{
				get
				{
					return mInstance.DefaultLayout;
				}
				set
				{
					mInstance.DefaultLayout = value;
				}
			}


			/// <summary>
			/// PageLayoutCode.
			/// </summary>
			public string PageLayoutCode
			{
				get
				{
					return mInstance.PageLayoutCode;
				}
				set
				{
					mInstance.PageLayoutCode = value;
				}
			}


			/// <summary>
			/// PhotoCount.
			/// </summary>
			public int PhotoCount
			{
				get
				{
					return mInstance.PhotoCount;
				}
				set
				{
					mInstance.PhotoCount = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="AlbumPageLayoutItem" /> class.
		/// </summary>
		public AlbumPageLayoutItem() : base(CLASS_NAME)
		{
			mFields = new AlbumPageLayoutItemFields(this);
		}

		#endregion
	}
}