//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.PrintForMe;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(Testimonial.CLASS_NAME, typeof(Testimonial))]

namespace CMS.DocumentEngine.Types.PrintForMe
{
	/// <summary>
	/// Represents a content item of type Testimonial.
	/// </summary>
	public partial class Testimonial : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "PrintForMe.Testimonial";


		/// <summary>
		/// The instance of the class that provides extended API for working with Testimonial fields.
		/// </summary>
		private readonly TestimonialFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// TestimonialID.
		/// </summary>
		[DatabaseIDField]
		public int TestimonialID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("TestimonialID"), 0);
			}
			set
			{
				SetValue("TestimonialID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string Name
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Name"), @"");
			}
			set
			{
				SetValue("Name", value);
			}
		}


		/// <summary>
		/// Picture.
		/// </summary>
		[DatabaseField]
		public string Picture
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Picture"), @"");
			}
			set
			{
				SetValue("Picture", value);
			}
		}


		/// <summary>
		/// Content.
		/// </summary>
		[DatabaseField]
		public string Content
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Content"), @"");
			}
			set
			{
				SetValue("Content", value);
			}
		}


		/// <summary>
		/// Url.
		/// </summary>
		[DatabaseField]
		public string Url
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Url"), @"");
			}
			set
			{
				SetValue("Url", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Testimonial fields.
		/// </summary>
		[RegisterProperty]
		public TestimonialFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Testimonial fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class TestimonialFields : AbstractHierarchicalObject<TestimonialFields>
		{
			/// <summary>
			/// The content item of type Testimonial that is a target of the extended API.
			/// </summary>
			private readonly Testimonial mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="TestimonialFields" /> class with the specified content item of type Testimonial.
			/// </summary>
			/// <param name="instance">The content item of type Testimonial that is a target of the extended API.</param>
			public TestimonialFields(Testimonial instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// TestimonialID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.TestimonialID;
				}
				set
				{
					mInstance.TestimonialID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.Name;
				}
				set
				{
					mInstance.Name = value;
				}
			}


			/// <summary>
			/// Picture.
			/// </summary>
			public string Picture
			{
				get
				{
					return mInstance.Picture;
				}
				set
				{
					mInstance.Picture = value;
				}
			}


			/// <summary>
			/// Content.
			/// </summary>
			public string Content
			{
				get
				{
					return mInstance.Content;
				}
				set
				{
					mInstance.Content = value;
				}
			}


			/// <summary>
			/// Url.
			/// </summary>
			public string Url
			{
				get
				{
					return mInstance.Url;
				}
				set
				{
					mInstance.Url = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Testimonial" /> class.
		/// </summary>
		public Testimonial() : base(CLASS_NAME)
		{
			mFields = new TestimonialFields(this);
		}

		#endregion
	}
}